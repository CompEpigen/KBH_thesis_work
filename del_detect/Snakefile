#configfile: "config.yaml"
#sample = config["samples"]
#roi = config["roi"]
#deletion = config["deletion"]
samples = 'FAB39075'
roi = 'chr17:64803882-66303882'
deletion = '65792276-65792280'

#Note that this snakefile relies on my methylation calling pipeline to have been run beforehand

import os

def activate_environment():
    os.system("module load samtools/1.9")
    os.system("module load anaconda3/2019.07")
    os.system("conda activate snakemake")

activate_environment()

rule all:
    input:
        expand("output/{sample}.{roi}.region.bam", sample=samples.split(' '), roi=roi.split(' ')),
        expand("output/{sample}.{roi}.region.bam.bai", sample=samples.split(' '), roi=roi.split(' ')),
        expand("output/{sample}.{roi}.meth_calls.tsv", sample=samples.split(' '), roi=roi.split(' ')),
        expand("output/{sample}.{roi}_deletion_readids.txt", sample=samples.split(' '), roi=roi.split(' ')),
        expand("output/{sample}.{roi}_deletions.bam", sample=samples.split(' '), roi=roi.split(' ')),
        expand("output/{sample}.{roi}_nodeletions.bam", sample=samples.split(' '), roi=roi.split(' ')),
        expand("output/{sample}.{roi}_deletion_meth_calls.tsv", sample=samples.split(' '), roi=roi.split(' ')),
        expand("output/{sample}.{roi}_nodeletion_meth_calls.tsv", sample=samples.split(' '), roi=roi.split(' '))


rule def_region:
    input:
        bam="data/{sample}.bam"
    output:
        "output/{sample}.{roi}.region.bam"
    #params:
    shell:
        "samtools view -b {input.bam} '{roi}' > {output}"

rule index_bams:
    input:
        "output/{sample}.{roi}.region.bam"
    output:
        "output/{sample}.{roi}.region.bam.bai"
    #params:
    #    jobname="index_bams",
    #    runtime="8:00",
    #    memusage="20000",
    #    slots="1",
    #    misc=" "
    shell:
        "samtools index {input}"

rule subset_meth:
    input:
        meth="data/{sample}.meth_calls.tsv",
        bam="output/{sample}.{roi}.region.bam",
        bai="output/{sample}.{roi}.region.bam.bai"
    output:
        "output/{sample}.{roi}.meth_calls.tsv"
    #params:
    shell:
        "python3 filter_meth.py -f {input.meth} -b {input.bam} -o {output}"

rule split_bam:
    input:
        bam="output/{sample}.{roi}.region.bam",
        bai="output/{sample}.{roi}.region.bam.bai"
    output:
        "output/{sample}.{roi}_deletion_readids.txt",
        "output/{sample}.{roi}_deletions.bam",
        "output/{sample}.{roi}_nodeletions.bam"
    #params:
    shell:
        "python3 split_bam.py -b {input.bam} -d {deletion} -o {sample}.{roi}"

rule split_meth:
    input:
        mc="output/{sample}.{roi}.meth_calls.tsv",
        ids="output/{sample}.{roi}_deletion_readids.txt"
    output:
        "output/{sample}.{roi}_deletion_meth_calls.tsv",
        "output/{sample}.{roi}_nodeletion_meth_calls.tsv"
    #params:
    shell:
        "python3 split_meth.py -f {input.mc} -l {input.ids} -o {sample}.{roi}"

#rule diff_meth_analysis:
#Use pycometh here to do differential methylation analysis
#Put pycometh in the same venv as snakemake